# -*- coding: utf-8 -*-
"""PS5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CmcD31BpvtMzx5aIV0BVpBGOLJLQ0m2O
"""

from os.path import exists
import pandas as pd
import statsmodels.api as sm
import math
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import numpy as np 
from patsy import bs, dmatrix
from sklearn.linear_model import LogisticRegression
import statsmodels.api as sm

#Question 0
#import data
tg_data = None
file = 'tooth_growth.feather'
if exists(file):
    tg_data = pd.read_feather(file)
else: 
    tooth_growth = sm.datasets.get_rdataset('ToothGrowth')
    #print(tooth_growth.__doc__)
    tg_data = tooth_growth.data
    tg_data.to_feather(file)

#log transform length
y = [math.log(i) for i in tg_data['len']]
#model = LinearRegression().fit()

tg_data[['supp', 'dose']]
#supp = OJ, VC
#dose = 0.5, 1.0, 2.0
dummy_OJ = [1 if i == 'OJ' else 0 for i in tg_data]
dummy_VC = [1 if i == 'VC' else 0 for i in tg_data]
dummy_5 = [1 if i == 0.5 else 0 for i in tg_data]
dummy_1 = [1 if i == 1.0 else 0 for i in tg_data]
dummy_2 = [1 if i == 2.0 else 0 for i in tg_data]

tooth_data = pd.read_sas("OHXDEN_G.XPT")
demo_data = pd.read_sas("DEMO_G.XPT")
outcome = data['OHX01TC']
age = demo_data['RIDAGEYR']

transform_age = dmatrix("bs(age, knots=(25,40,60), degree=3, include_intercept=False)",
                        {"age": age}, return_type='dataframe')
model = LogisticRegression()
#outcome = outcome.fillna(0)
#model.fit(transform_age, outcome)
fit1 = sm.GLM(outcome, transform_age).fit()